#!/bin/zsh -eu

# creates AVIF images from list of input files, given a "base" string initial argument

MAX_WIDTH=2500
BASE=${1:?"Usage: $0 <basename eg: '2025-europe'>  <image input file1> .."}
shift

if [ -e "$BASE" ]; then
  echo "flipped args?"
  return
fi

while true; do
  IMG="$1"
  shift
  if [ ! "$IMG" ]; then break; fi
  if [ ! -e "$IMG" ]; then break; fi

  for n in $(seq -w 0 99); do
    OUT=${BASE}-$n.avif
    if [ ! -e $OUT ]; then break; fi
  done

  # resize/shrink input by multiples of 2, until the output width is <= $MAX_WIDTH
  WIDTH=$(identify -format "%w" "$IMG")
  DIVISOR=1
  while true; do
    local RESIZED_WIDTH=$(( WIDTH * 2 / (2**DIVISOR) ))
    # echo how about $RESIZED_WIDTH?
    if [ $RESIZED_WIDTH -le $MAX_WIDTH ]; then
      break
    fi
    let "DIVISOR=$DIVISOR+1"
  done
  # Make sure it's even
  RESIZED_WIDTH=$(( RESIZED_WIDTH - RESIZED_WIDTH % 2 ))
  echo "$OUT\t${WIDTH}w => $RESIZED_WIDTH"

  # avif:effort => higher === slower & higher quality
  magick "$IMG" -resize $RESIZED_WIDTH -define avif:effort=6 -quality 90 $OUT
done
